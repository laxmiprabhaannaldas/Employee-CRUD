{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass EmployeeService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"http://localhost:8080/api/v1/employees\";\n  }\n  getEmployeeList() {\n    return this.http.get(`${this.baseUrl}`);\n  }\n  createEmployee(employee) {\n    return this.http.post(`${this.baseUrl}`, employee);\n  }\n  getEmployeeById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  updateEmployee(id, employee) {\n    return this.http.put(`${this.baseUrl}/${id}`, employee);\n  }\n  deleteEmployee(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n}\nEmployeeService.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n};\nEmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmployeeService,\n  factory: EmployeeService.ɵfac,\n  providedIn: 'root'\n});\nexport { EmployeeService };","map":{"version":3,"names":["EmployeeService","constructor","http","baseUrl","getEmployeeList","get","createEmployee","employee","post","getEmployeeById","id","updateEmployee","put","deleteEmployee","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\angular\\EmployeeCrudAngular\\src\\app\\employee.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Employee } from './employee';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  private baseUrl = \"http://localhost:8080/api/v1/employees\";\n  constructor(private http: HttpClient) { }\n  getEmployeeList(): Observable<Employee[]> {\n    return this.http.get<Employee[]>(`${this.baseUrl}`);\n  }\n  createEmployee(employee: Employee): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, employee);\n  }\n  getEmployeeById(id: number): Observable<Employee> {\n    return this.http.get<Employee>(`${this.baseUrl}/${id}`);\n  }\n  updateEmployee(id: number, employee: Employee): Observable<Object> {\n    return this.http.put(`${this.baseUrl}/${id}`, employee);\n  }\n  deleteEmployee(id:number):Observable<Object>{\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n}\n"],"mappings":";;AAKA,MAGaA,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,OAAO,GAAG,wCAAwC;EAClB;EACxCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EACrD;EACAG,cAAcA,CAACC,QAAkB;IAC/B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,EAAE,EAAEI,QAAQ,CAAC;EACpD;EACAE,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,OAAO,IAAIO,EAAE,EAAE,CAAC;EACzD;EACAC,cAAcA,CAACD,EAAU,EAAEH,QAAkB;IAC3C,OAAO,IAAI,CAACL,IAAI,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,OAAO,IAAIO,EAAE,EAAE,EAAEH,QAAQ,CAAC;EACzD;EACAM,cAAcA,CAACH,EAAS;IACtB,OAAO,IAAI,CAACR,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,IAAIO,EAAE,EAAE,CAAC;EAClD;;AAjBWV,eAAe,C;mBAAfA,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAflB,eAAe,C;SAAfA,eAAe;EAAAmB,OAAA,EAAfnB,eAAe,CAAAoB,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEPrB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}